#!/bin/bash

set -eu

function header() {
  echo
  echo "########"
  echo "$@"
  echo
}

ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"
cd $ROOT

if [[ "${RUN_BROKER_FOR_SANITY_TEST:-X}" == "X" ]]; then
  export SB_BROKER_URL=${SB_BROKER_URL:-http://localhost:$PORT}
  export SB_BROKER_USERNAME=${SB_BROKER_USERNAME:-}
  export SB_BROKER_PASSWORD=${SB_BROKER_PASSWORD:-}
  echo "Connecting to existing broker ${SB_BROKER_URL} ..."
else
  export BROKER_USERNAME=broker
  export BROKER_PASSWORD=password

  export PORT=8200

  echo "Starting broker :$PORT ...";
  go run cmd/broker/main.go &
  BROKER_PID=$!
  sleep 2

  function finish { echo "Stopping broker..."; kill $BROKER_PID; }
  trap finish EXIT SIGINT SIGTERM

  export SB_BROKER_URL=http://localhost:$PORT
  export SB_BROKER_USERNAME=${BROKER_USERNAME}
  export SB_BROKER_PASSWORD=${BROKER_PASSWORD}
fi


export EDEN_CONFIG=${EDEN_CONFIG:-tmp/eden_config_sanity_test}
mkdir -p $(dirname $EDEN_CONFIG)
rm -rf $EDEN_CONFIG


header "Catalog"
eden catalog
echo

errors=

header "Provision 'topic' plan"
eden provision -s starkandwayne-kafka -p topic

header "Bind 'topic' plan"
export SB_INSTANCE=$(bosh int $EDEN_CONFIG --path /service_instances/0/id)
eden bind

credentials=$(bosh int $EDEN_CONFIG --path /service_instances/0/bindings/0/credentials)
echo "credentials: $credentials"

header "Test 'topic' plan credentials"
topicName=$(bosh int <(echo $credentials) --path /topicName)
kafkaHostnames=$(bosh int <(echo $credentials) --path /hostname)
uri=$(bosh int <(echo $credentials) --path /uri)

if [[ "$topicName" != "$SB_INSTANCE" ]]; then
  echo "ERROR: expected topicName '$topicName' to equal service instance ID '$SB_INSTANCE'"
  errors=1
fi
if [[ "$uri" != "kafka://$kafkaHostnames/$topicName" ]]; then
  echo "ERROR: expected uri 'kafka://$kafkaHostnames/$topicName' to equal '$uri'"
  errors=1
fi

header "Unbind 'topic' plan"
eden unbind -b $(bosh int $EDEN_CONFIG --path /service_instances/0/bindings/0/id)

header "Deprovision 'topic' plan"
eden deprovision

if [[ "$errors" == "1" ]]; then
  exit 1
fi


rm -rf $EDEN_CONFIG
errors=

header "Provision 'shared' plan"
eden provision -s starkandwayne-kafka -p shared

header "Bind 'shared' plan"
export SB_INSTANCE=$(bosh int $EDEN_CONFIG --path /service_instances/0/id)
eden bind

credentials=$(bosh int $EDEN_CONFIG --path /service_instances/0/bindings/0/credentials)
echo
echo "credentials: $credentials"

header "Test 'shared' plan credentials"
topicNamePrefix=$(bosh int <(echo $credentials) --path /topicNamePrefix)
kafkaHostnames=$(bosh int <(echo $credentials) --path /hostname)
uri=$(bosh int <(echo $credentials) --path /uri)

if [[ "$topicNamePrefix" != "$SB_INSTANCE" ]]; then
  echo "ERROR: expected topicNamePrefix '$topicNamePrefix' to equal service instance ID '$SB_INSTANCE'"
  errors=1
fi
if [[ "$uri" != "kafka://$kafkaHostnames" ]]; then
  echo "ERROR: expected uri 'kafka://$kafkaHostnames' to equal '$uri'"
  errors=1
fi

header "Unbind 'shard' plan"
eden unbind -b $(bosh int $EDEN_CONFIG --path /service_instances/0/bindings/0/id)

header "Deprovision 'shared' plan"
eden deprovision

if [[ "$errors" == "1" ]]; then
  exit 1
fi
